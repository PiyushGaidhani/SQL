use database DEMO_DATABASE;

CREATE OR REPLACE TABLE sales_data
(
 ORDER_ID VARCHAR2(30) PRIMARY KEY,
 ORDER_DATE DATE,
 SHIP_DATE DATE,
 SHIP_MODE VARCHAR2(30),
 CUSTOMER_NAME VARCHAR2(30),
 SEGMENT VARCHAR2(30),
 STATE STRING,
 COUNTRY VARCHAR2(100),
 MARKET VARCHAR(30),
 REGION VARCHAR(30),
 PRODUCT_ID VARCHAR(30),
 CATEGORY VARCHAR(100),
 SUB_CATEGORY VARCHAR(30),
 PRODUCT_NAME STRING,
 SALES NUMBER(12,0),
 QUANTITY NUMBER (10,0),
 DISCOUNT VARCHAR(100),
 PROFIT NUMBER (10,5),
 SHIPPING_COST VARCHAR2(30),
 ORDER_PRIORITY VARCHAR2(30),
 YEAR VARCHAR2(30)
 );
 DESCRIBE TABLE SALES_DATA;
 --DROP TABLE DEMO_DATABASE.PUBLIC.SALES_DATA;
 SELECT * FROM SALES_DATA;

 --EXTRACT THE LAST NUMBER AFTER THE - FROM ORDER_ID 
 ALTER TABLE SALES_DATA 
 ADD COLUMN ORDER_NO NUMBER(15,0);
 
 SELECT ORDER_ID FROM SALES_DATA;
 
 UPDATE sales_data
SET ORDER_NO = SPLIT_PART(ORDER_ID, '-', -1);

SELECT ORDER_NO,ORDER_ID FROM SALES_DATA; 

-- FLAG, IF DISCOUNT IS GREATER THAN 0 THEN  YES ELSE FALSE, AND PUT IT IN A NEW COLUMN FOR EVERY ORDER ID.

SELECT DISCOUNT FROM SALES_DATA;

SELECT ORDER_ID, DISCOUNT ,
CASE 
    WHEN DISCOUNT > 0 THEN 'YES'
    ELSE FALSE 
    END AS DISCOUNT_FLAG
FROM SALES_DATA;

--FIND OUT THE FINAL PROFIT AND PUT IT IN COLUMN FOR EVERY ORDER ID.
ALTER TABLE SALES_DATA
ADD COLUMN FINAL_PROFIT NUMBER(10,0);

UPDATE SALES_DATA
SET FINAL_PROFIT = SALES - (PROFIT + (QUANTITY * SHIPPING_COST));


SELECT * FROM SALES_DATA LIMIT 10;

--FIND OUT HOW MANY DAYS TAKES FOR EACH ORDER TO PROCESS FOR THE SHIPMENT FOR EVERY ORDER ID.
ALTER TABLE SALES_DATA
ADD COLUMN DAYS_FOR_SHIPMENT VARCHAR2(50);

UPDATE SALES_DATA 
SET DAYS_FOR_SHIPMENT =DATEDIFF('DAY', ORDER_DATE, SHIP_DATE);

SELECT DAYS_FOR_SHIPMENT
FROM SALES_DATA
ORDER BY 1;
SELECT DAYS_FOR_SHIPMENT FROM SALES_DATA;

--SELECT * FROM SALES_DATA
--WHERE ORDER_ID = 'CA-2011-109491';



-- FLAG THE PROCESS DAY AS BY RATING IF IT TAKES LESS OR EQUAL 3  DAYS MAKE 5,LESS OR EQUAL THAN 6 DAYS BUT MORE THAN 3 MAKE 4,LESS THAN 10 BUT MORE THAN 6 MAKE 3,MORE THAN 10 MAKE IT 2 FOR EVERY ORDER ID.


SELECT DAYS_FOR_SHIPMENT FROM SALES_DATA;

SELECT *,
CASE when(DAYS_FOR_SHIPMENT <='3') THEN '5'
    WHEN (DAYS_FOR_SHIPMENT <='6' AND DAYS_FOR_SHIPMENT >'3') THEN '4'
    WHEN (DAYS_FOR_SHIPMENT<'10' AND DAYS_FOR_SHIPMENT>'6') THEN '3'
    WHEN (DAYS_FOR_SHIPMENT>'10')THEN '2'
    ELSE  NULL
END AS RATING
FROM SALES_DATA;
    

